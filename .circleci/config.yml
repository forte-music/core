version: 2

aliases:
  - &save_cargo_cache
    key: v5-cargo-{{ checksum "Cargo.lock" }}
    paths:
      - target
      - ~/.cargo

  - &restore_cargo_cache
    keys:
      - v5-cargo-{{ checksum "Cargo.lock" }}

  - &save_artifact_cache
    key: v1-artifact-{{ checksum "Cargo.lock" }}
    paths:
    - target
    - ~/.cargo

  - &restore_artifact_cache
    keys:
    - v1-artifact-{{ checksum "Cargo.lock" }}

  - &save_yarn_cache
    key: yarn-{{ checksum "fixture_setup/yarn.lock" }}
    paths:
      - fixture_setup/node_modules

  - &restore_yarn_cache
    keys:
      - yarn-{{ checksum "fixture_setup/yarn.lock" }}
      - yarn-

  - &compile_commands |
      cargo build

  - &lint_commands |
      cargo fmt -p forte_core taglib2-sys fixture_setup -- --check

jobs:
  build:
    docker:
      - image: fortemusic/core-build:v2.0.0

    steps:
      - checkout

      - run:
          name: Checkout Git Submodules
          command: git submodule update --init

      - restore_cache: *restore_cargo_cache

      - run:
          name: Check Formatting
          command: *lint_commands

      - run:
          name: Compile forte_core
          command: *compile_commands

      - run:
          name: Compile fixture_setup
          working_directory: fixture_setup
          command: *compile_commands

      - save_cache: *save_cargo_cache

      - persist_to_workspace:
          root: .
          paths:
            - target/debug/forte
            - target/debug/fixture_setup

  integration-test:
    docker:
      - image: fortemusic/core-build:v2.0.0

    environment:
      RUST_BACKTRACE: "1"

    steps:
      - checkout

      - attach_workspace:
          at: ~/project

      - restore_cache: *restore_yarn_cache

      - run:
          name: Install Test Runner
          working_directory: fixture_setup
          command: yarn

      - save_cache: *save_yarn_cache

      - run:
          name: Initialize Database
          environment:
            DATABASE_URL: ./db.sqlite
          command: diesel migration run

      - run:
          name: Check src/database.rs
          environment:
            DATABASE_URL: ./db.sqlite
          command: |
            diesel print-schema > src/database.expected.rs
            rustfmt src/database.expected.rs
            diff src/database{,.expected}.rs || exit 1

      - run:
          name: Install Fixtures
          environment:
            DATABASE_URL: ../db.sqlite
          command: ./target/debug/fixture_setup

      - run:
          name: Start Core
          environment:
            DATABASE_URL: ./db.sqlite
          background: true
          command: ./target/debug/forte --app-dir . serve

      - run:
          name: Run Tests
          working_directory: fixture_setup
          command: |
            wait-for --timeout=3600 localhost:8080 -- echo "Core started"
            yarn run forte-test-api http://localhost:8080/graphql --runInBand

  download_web:
    docker:
    - image: garland/aws-cli-docker:1.15.47

    steps:
      - run:
          name: Download Web
          command: aws s3 cp s3://forte-web-artifacts/master/forte-web.tar.gz .

      - persist_to_workspace:
          root: .
          paths:
            - forte-web.tar.gz

  build_artifacts:
    docker:
    - image: fortemusic/core-build:v2.0.0

    steps:
      - checkout

      - run:
          name: Checkout Git Submodules
          command: git submodule update --init

      - restore_cache: *restore_artifact_cache

      - attach_workspace:
          at: ~/project

      - run:
          name: Unpack Web
          command: |
            mkdir web
            tar -xzf forte-web.tar.gz -C web

      - run:
          name: Compile Core With Web
          command: cargo build --release --features embed_web

      - save_cache: *save_artifact_cache

      - store_artifacts:
          path: target/release/forte

workflows:
  version: 2
  test:
    jobs:
      - build
      - integration-test:
          requires:
            - build
      - download_web
      - build_artifacts:
          requires:
            - download_web
